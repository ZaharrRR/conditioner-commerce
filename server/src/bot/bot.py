from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommandScopeDefault, BotCommand
from aiogram_dialog import setup_dialogs

from core import settings, logger
from schemas import OrderRead

bot = Bot(token=settings.telegram.bot_token, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

async def set_commands():
    commands = [BotCommand(command='start', description='–†–µ—Å—Ç–∞—Ä—Ç')]
    await bot.set_my_commands(commands, BotCommandScopeDefault())

async def start_bot():
    setup_dialogs(dp)
    await set_commands()

    for admin_id in settings.telegram.admin_ids:
        try:
            await bot.send_message(admin_id, '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ωü•≥')
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
            pass
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")

async def stop_bot():
    try:
        for admin_id in settings.telegram.admin_ids:
            await bot.send_message(admin_id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    except:
        pass
    logger.error("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

async def notify_admins(new_order: OrderRead):
    created_date = new_order.created_at.strftime('%d.%m.%Y %H:%M')

    message_text = (
        f"üì¶ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑! ({created_date})</b> üì¶\n"
        f"üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {new_order.customer_name} {new_order.customer_surname}\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {new_order.customer_phone}\n"
        f"üè† <b>–ê–¥—Ä–µ—Å:</b> {new_order.address}\n"
        f"üíµ <b>–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞:</b> {new_order.total_price}\n"
        f"üî∏ <b>–¢–æ–≤–∞—Ä:</b> {new_order.product.name} ({new_order.product.brand_name}) –∑–∞ {new_order.product.price}\n"
    )

    if new_order.services:
        message_text += "üîß <b>–£—Å–ª—É–≥–∏:</b>\n"
        for service in new_order.services:
            message_text += f"   ‚Ä¢ {service.service_type}: {service.base_price}\n"

    for admin_id in settings.telegram.admin_ids:
        try:
            await bot.send_message(admin_id, message_text, parse_mode=ParseMode.HTML)
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
